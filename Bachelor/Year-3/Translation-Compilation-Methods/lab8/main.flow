import quotient;
import expression;
import parsing;
import simplification;

derive(e: Exp, varName: string) -> Exp {
    switch(e) {
        Var(name): if(name == varName) Int(1) else Int(0);
        Neg(e1): simplifiedNeg(derive(e1, varName));
        Binary(l, r, op): {
            ld: Exp = derive(l, varName);
            rd: Exp = derive(r, varName);
            switch(op) {
                AddOp(): simplifiedAdd(ld, rd);
                SubOp(): simplifiedSub(ld, rd);
                MulOp(): simplifiedAdd(simplifiedMul(l, rd), simplifiedMul(ld, r));
                DivOp(): simplifiedDiv(simplifiedSub(simplifiedMul(ld, r), simplifiedMul(l, rd)), simplifiedMul(r, r));
            };
        }
        default: Int(0);
    }
}

main() {
    str: string = " x / (x+1) + (x+2)/(x+3) + y ";
    expression: Exp = parse(str, "#include lingo/lab8.lingo");
    d: Exp = derive(expression, "x");
    println(getRepr(d));
    quit(0);
}
